{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2025-07-07T04:01:11.577Z",
    "end": "2025-07-07T04:02:58.155Z",
    "duration": 106578,
    "testsRegistered": 5,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bf667ffe-bb94-4eca-aa74-73b0108f3443",
      "title": "",
      "fullFile": "cypress\\e2e\\features\\addNewEmployee.feature",
      "file": "cypress\\e2e\\features\\addNewEmployee.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5e518d90-f8d1-44e1-9c3a-31bb6d44c366",
          "title": "Add New Employee Functionality",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Success adding new employee",
              "fullTitle": "Add New Employee Functionality Success adding new employee",
              "timedOut": null,
              "duration": 23900,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "99970b91-a6bf-4bf5-9f9c-97170ed6b1c4",
              "parentUUID": "5e518d90-f8d1-44e1-9c3a-31bb6d44c366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Invalid adding new employee",
              "fullTitle": "Add New Employee Functionality Invalid adding new employee",
              "timedOut": null,
              "duration": 14655,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ae00e28c-8f55-4fc4-9da1-a3fdc5e781d3",
              "parentUUID": "5e518d90-f8d1-44e1-9c3a-31bb6d44c366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding new employee with numeric last name",
              "fullTitle": "Add New Employee Functionality Adding new employee with numeric last name",
              "timedOut": null,
              "duration": 27600,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Only letters are allowed' but never did.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find content: 'Only letters are allowed' but never did.\n    at Context.eval (cypress/e2e/step_definitions/addNewEmployee.js:40:44)\n    at Context.resolveAndRunStepDefinition (node_modules/cypress-cucumber-preprocessor/lib/resolveStepDefinition.js:193:0)\n    at Context.eval (node_modules/cypress-cucumber-preprocessor/lib/createTestFromScenario.js:27:0)\n    at getRet (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:120941:20)\n    at tryCatcher (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:120952:66)\n    at Context.then (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:121203:21)\n    at wrapped (https://opensource-demo.orangehrmlive.com/__cypress/runner/cypress_runner.js:141524:19)",
                "diff": null
              },
              "uuid": "b0cb9b74-12f7-463b-a666-b1fb21b1123d",
              "parentUUID": "5e518d90-f8d1-44e1-9c3a-31bb6d44c366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cancel adding new employee",
              "fullTitle": "Add New Employee Functionality Cancel adding new employee",
              "timedOut": null,
              "duration": 13332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "cc72451c-0ffe-4296-b408-a4521aa5bcf1",
              "parentUUID": "5e518d90-f8d1-44e1-9c3a-31bb6d44c366",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding new employee with duplicate employee ID",
              "fullTitle": "Add New Employee Functionality Adding new employee with duplicate employee ID",
              "timedOut": null,
              "duration": 26567,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8d1e444c-7ebe-400e-9f75-2c570f134c15",
              "parentUUID": "5e518d90-f8d1-44e1-9c3a-31bb6d44c366",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99970b91-a6bf-4bf5-9f9c-97170ed6b1c4",
            "ae00e28c-8f55-4fc4-9da1-a3fdc5e781d3",
            "cc72451c-0ffe-4296-b408-a4521aa5bcf1",
            "8d1e444c-7ebe-400e-9f75-2c570f134c15"
          ],
          "failures": [
            "b0cb9b74-12f7-463b-a666-b1fb21b1123d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 106054,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}